Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    startup_mdr32f9qx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(RESET) refers to startup_mdr32f9qx.o(STACK) for __initial_sp
    startup_mdr32f9qx.o(RESET) refers to startup_mdr32f9qx.o(.text) for Reset_Handler
    startup_mdr32f9qx.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_mdr32f9qx.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_mdr32f9qx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(.text) refers to system_mdr32f9qx.o(i.SystemInit) for SystemInit
    startup_mdr32f9qx.o(.text) refers to __main.o(!!!main) for __main
    startup_mdr32f9qx.o(.text) refers to startup_mdr32f9qx.o(HEAP) for Heap_Mem
    startup_mdr32f9qx.o(.text) refers to startup_mdr32f9qx.o(STACK) for Stack_Mem
    system_mdr32f9qx.o(i.SystemCoreClockUpdate) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    system_mdr32f9qx.o(i.SystemInit) refers to system_mdr32f9qx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_HSEconfig) for RST_CLK_HSEconfig
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_HSEstatus) for RST_CLK_HSEstatus
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLconfig) for RST_CLK_CPU_PLLconfig
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLcmd) for RST_CLK_CPU_PLLcmd
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkPrescaler) for RST_CLK_CPUclkPrescaler
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLuse) for RST_CLK_CPU_PLLuse
    main.o(i.Clock_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    main.o(i.Port_Init) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    main.o(i.Port_Init) refers to mdr32f9qx_port.o(i.PORT_Init) for PORT_Init
    main.o(i.main) refers to main.o(i.Clock_Init) for Clock_Init
    main.o(i.main) refers to main.o(i.Port_Init) for Port_Init
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(i.vLed1) for vLed1
    main.o(i.main) refers to main.o(i.vLed2) for vLed2
    main.o(i.vLed1) refers to mdr32f9qx_port.o(i.PORT_SetBits) for PORT_SetBits
    main.o(i.vLed1) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.vLed1) refers to mdr32f9qx_port.o(i.PORT_ResetBits) for PORT_ResetBits
    main.o(i.vLed2) refers to mdr32f9qx_port.o(i.PORT_SetBits) for PORT_SetBits
    main.o(i.vLed2) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.vLed2) refers to mdr32f9qx_port.o(i.PORT_ResetBits) for PORT_ResetBits
    event_groups.o(i.vEventGroupClearBitsCallback) refers to event_groups.o(i.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.vEventGroupDelete) refers to heap_2.o(i.vPortFree) for vPortFree
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.vEventGroupSetBitsCallback) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    event_groups.o(i.xEventGroupCreate) refers to list.o(i.vListInitialise) for vListInitialise
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSync) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupWaitBits) refers to event_groups.o(i.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_2.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueGenericCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.data) for xStart
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(i.prvHeapInit) for prvHeapInit
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(.data) for xHeapHasBeenInitialised
    heap_2.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.vPortFree) refers to heap_2.o(.data) for xStart
    heap_2.o(i.xPortGetFreeHeapSize) refers to heap_2.o(.data) for xFreeBytesRemaining
    mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_DeInit) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_WarmDeInit) for RST_CLK_WarmDeInit
    mdr32f9qx_rst_clk.o(i.RST_CLK_DeInit) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    mdr32f9qx_rst_clk.o(i.RST_CLK_HSEstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_HSIstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_LSEstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_LSIstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_USB_PLLstatus) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_WarmDeInit) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_HSIcmd) for RST_CLK_HSIcmd
    mdr32f9qx_rst_clk.o(i.RST_CLK_WarmDeInit) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_HSIstatus) for RST_CLK_HSIstatus
    mdr32f9qx_rst_clk.o(i.RST_CLK_WarmDeInit) refers to mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mdr32f9qx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_mdr32f9qx.o(.rev16_text), (4 bytes).
    Removing system_mdr32f9qx.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(i.vApplicationIdleHook), (2 bytes).
    Removing event_groups.o(i.prvTestWaitCondition), (30 bytes).
    Removing event_groups.o(i.vEventGroupClearBitsCallback), (16 bytes).
    Removing event_groups.o(i.vEventGroupDelete), (42 bytes).
    Removing event_groups.o(i.vEventGroupSetBitsCallback), (16 bytes).
    Removing event_groups.o(i.xEventGroupClearBits), (32 bytes).
    Removing event_groups.o(i.xEventGroupCreate), (26 bytes).
    Removing event_groups.o(i.xEventGroupGetBitsFromISR), (44 bytes).
    Removing event_groups.o(i.xEventGroupSetBits), (146 bytes).
    Removing event_groups.o(i.xEventGroupSync), (168 bytes).
    Removing event_groups.o(i.xEventGroupWaitBits), (204 bytes).
    Removing port.o(i.vPortEndScheduler), (2 bytes).
    Removing queue.o(i.prvCopyDataFromQueue), (42 bytes).
    Removing queue.o(i.prvCopyDataToQueue), (106 bytes).
    Removing queue.o(i.prvInitialiseNewQueue), (38 bytes).
    Removing queue.o(i.prvIsQueueEmpty), (26 bytes).
    Removing queue.o(i.prvIsQueueFull), (30 bytes).
    Removing queue.o(i.prvUnlockQueue), (126 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (6 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (24 bytes).
    Removing queue.o(i.vQueueDelete), (14 bytes).
    Removing queue.o(i.xQueueGenericCreate), (56 bytes).
    Removing queue.o(i.xQueueGenericReset), (128 bytes).
    Removing queue.o(i.xQueueGenericSend), (280 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (134 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (120 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (14 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (18 bytes).
    Removing queue.o(i.xQueuePeek), (268 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (74 bytes).
    Removing queue.o(i.xQueueReceive), (260 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (130 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (240 bytes).
    Removing tasks.o(i.pcTaskGetName), (24 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (64 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (56 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (116 bytes).
    Removing tasks.o(i.vTaskDelete), (204 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskInternalSetTimeOutState), (24 bytes).
    Removing tasks.o(i.vTaskMissedYield), (12 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (180 bytes).
    Removing tasks.o(i.vTaskPlaceOnEventList), (32 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (44 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (232 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (100 bytes).
    Removing tasks.o(i.vTaskResume), (120 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (36 bytes).
    Removing tasks.o(i.vTaskSuspend), (204 bytes).
    Removing tasks.o(i.xTaskCheckForTimeOut), (92 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (196 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (252 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskRemoveFromEventList), (128 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (152 bytes).
    Removing heap_2.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(.rev16_text), (4 bytes).
    Removing mdr32f9qx_rst_clk.o(.revsh_text), (4 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_ADCclkEnable), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_ADCclkPrescaler), (24 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_ADCclkSelection), (20 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLstatus), (52 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_DeInit), (44 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_GetClocksFreq), (628 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_HSEclkPrescaler), (20 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_HSIadjust), (24 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_HSIclkPrescaler), (24 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_HSIcmd), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_HSIstatus), (52 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_LSEconfig), (60 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_LSEstatus), (52 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_LSIadjust), (24 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_LSIcmd), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_LSIstatus), (52 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_RTC_HSEclkEnable), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_RTC_HSIclkEnable), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USB_PLLcmd), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USB_PLLconfig), (64 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USB_PLLstatus), (52 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USB_PLLuse), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USBclkEnable), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_USBclkPrescaler), (12 bytes).
    Removing mdr32f9qx_rst_clk.o(i.RST_CLK_WarmDeInit), (84 bytes).
    Removing mdr32f9qx_port.o(.rev16_text), (4 bytes).
    Removing mdr32f9qx_port.o(.revsh_text), (4 bytes).
    Removing mdr32f9qx_port.o(i.PORT_DeInit), (20 bytes).
    Removing mdr32f9qx_port.o(i.PORT_ReadInputData), (6 bytes).
    Removing mdr32f9qx_port.o(i.PORT_ReadInputDataBit), (16 bytes).
    Removing mdr32f9qx_port.o(i.PORT_StructInit), (28 bytes).
    Removing mdr32f9qx_port.o(i.PORT_Write), (24 bytes).
    Removing mdr32f9qx_port.o(i.PORT_WriteBit), (44 bytes).

104 unused section(s) (total 7180 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Libs\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm\startup_MDR32F9Qx.s 0x00000000   Number         0  startup_mdr32f9qx.o ABSOLUTE
    Libs\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm\system_MDR32F9Qx.c 0x00000000   Number         0  system_mdr32f9qx.o ABSOLUTE
    Libs\FreeRTOS\croutine.c                 0x00000000   Number         0  croutine.o ABSOLUTE
    Libs\FreeRTOS\event_groups.c             0x00000000   Number         0  event_groups.o ABSOLUTE
    Libs\FreeRTOS\heap_2.c                   0x00000000   Number         0  heap_2.o ABSOLUTE
    Libs\FreeRTOS\list.c                     0x00000000   Number         0  list.o ABSOLUTE
    Libs\FreeRTOS\port.c                     0x00000000   Number         0  port.o ABSOLUTE
    Libs\FreeRTOS\queue.c                    0x00000000   Number         0  queue.o ABSOLUTE
    Libs\FreeRTOS\tasks.c                    0x00000000   Number         0  tasks.o ABSOLUTE
    Libs\FreeRTOS\timers.c                   0x00000000   Number         0  timers.o ABSOLUTE
    Libs\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_port.c 0x00000000   Number         0  mdr32f9qx_port.o ABSOLUTE
    Libs\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_rst_clk.c 0x00000000   Number         0  mdr32f9qx_rst_clk.o ABSOLUTE
    Libs\\CMSIS\\CM3\\DeviceSupport\\MDR32F9Qx\\startup\\arm\\system_MDR32F9Qx.c 0x00000000   Number         0  system_mdr32f9qx.o ABSOLUTE
    Libs\\FreeRTOS\\port.c                   0x00000000   Number         0  port.o ABSOLUTE
    Libs\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_port.c 0x00000000   Number         0  mdr32f9qx_port.o ABSOLUTE
    Libs\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_rst_clk.c 0x00000000   Number         0  mdr32f9qx_rst_clk.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_mdr32f9qx.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080000fc   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000118   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000134   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000136   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000138   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800013a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800013c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800013c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800013c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000142   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000142   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000146   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000146   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800014e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000150   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000150   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000154   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0800015c   Section      150  port.o(.emb_text)
    .text                                    0x080001f4   Section       64  startup_mdr32f9qx.o(.text)
    .text                                    0x08000234   Section        0  heapauxi.o(.text)
    .text                                    0x0800023a   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000284   Section        0  exit.o(.text)
    .text                                    0x08000298   Section        8  libspace.o(.text)
    .text                                    0x080002a0   Section        0  sys_exit.o(.text)
    .text                                    0x080002ac   Section        2  use_no_semi.o(.text)
    .text                                    0x080002ae   Section        0  indicate_semi.o(.text)
    i.Clock_Init                             0x080002ae   Section        0  main.o(i.Clock_Init)
    i.PORT_Init                              0x080002ec   Section        0  mdr32f9qx_port.o(i.PORT_Init)
    i.PORT_ResetBits                         0x080004b4   Section        0  mdr32f9qx_port.o(i.PORT_ResetBits)
    i.PORT_SetBits                           0x080004d0   Section        0  mdr32f9qx_port.o(i.PORT_SetBits)
    i.Port_Init                              0x080004ec   Section        0  main.o(i.Port_Init)
    i.RST_CLK_CPU_PLLcmd                     0x08000524   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLcmd)
    i.RST_CLK_CPU_PLLconfig                  0x08000530   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLconfig)
    i.RST_CLK_CPU_PLLuse                     0x08000570   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLuse)
    i.RST_CLK_CPUclkPrescaler                0x0800057c   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkPrescaler)
    i.RST_CLK_CPUclkSelection                0x08000594   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkSelection)
    i.RST_CLK_GetFlagStatus                  0x080005a8   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus)
    i.RST_CLK_HSEconfig                      0x080005dc   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_HSEconfig)
    i.RST_CLK_HSEstatus                      0x08000618   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_HSEstatus)
    i.RST_CLK_PCLKcmd                        0x0800064c   Section        0  mdr32f9qx_rst_clk.o(i.RST_CLK_PCLKcmd)
    i.SysTick_Handler                        0x0800066c   Section        0  port.o(i.SysTick_Handler)
    i.SystemCoreClockUpdate                  0x080006a0   Section        0  system_mdr32f9qx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08000730   Section        0  system_mdr32f9qx.o(i.SystemInit)
    i.main                                   0x08000770   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x080007bc   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x080007bd   Thumb Code   124  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x08000854   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x08000855   Thumb Code   150  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x08000908   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x08000909   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvDeleteTCB                           0x08000950   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x08000951   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvHeapInit                            0x08000964   Section        0  heap_2.o(i.prvHeapInit)
    prvHeapInit                              0x08000965   Thumb Code    42  heap_2.o(i.prvHeapInit)
    i.prvIdleTask                            0x0800099c   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x0800099d   Thumb Code    32  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewTask                   0x080009c4   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x080009c5   Thumb Code   128  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x08000a44   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x08000a45   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvResetNextTaskUnblockTime            0x08000aac   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x08000aad   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvTaskExitError                       0x08000ae0   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x08000ae1   Thumb Code    22  port.o(i.prvTaskExitError)
    i.pvPortMalloc                           0x08000af8   Section        0  heap_2.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x08000bb0   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x08000bd4   Section        0  list.o(i.uxListRemove)
    i.vLed1                                  0x08000bfc   Section        0  main.o(i.vLed1)
    i.vLed2                                  0x08000c20   Section        0  main.o(i.vLed2)
    i.vListInitialise                        0x08000c44   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x08000c5e   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x08000c64   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x08000c98   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x08000cb0   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x08000cd4   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x08000cf4   Section        0  heap_2.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x08000d34   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vTaskDelay                             0x08000d4c   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskStartScheduler                    0x08000d80   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x08000de4   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x08000df4   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x08000e54   Section        0  port.o(i.xPortStartScheduler)
    i.xTaskCreate                            0x08000e88   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskIncrementTick                     0x08000ee8   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskResumeAll                         0x08001004   Section        0  tasks.o(i.xTaskResumeAll)
    .data                                    0x20000000   Section        4  system_mdr32f9qx.o(.data)
    .data                                    0x20000004   Section        4  port.o(.data)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data)
    .data                                    0x20000008   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x2000000c   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000010   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000014   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000018   Data           4  tasks.o(.data)
    xTickCount                               0x2000001c   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000020   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000024   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000028   Data           4  tasks.o(.data)
    xYieldPending                            0x2000002c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000030   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000034   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000038   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x2000003c   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000040   Data           4  tasks.o(.data)
    .data                                    0x20000044   Section       24  heap_2.o(.data)
    xStart                                   0x20000044   Data           8  heap_2.o(.data)
    xEnd                                     0x2000004c   Data           8  heap_2.o(.data)
    xFreeBytesRemaining                      0x20000054   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x20000058   Data           4  heap_2.o(.data)
    .bss                                     0x2000005c   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x2000005c   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200000c0   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200000d4   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200000e8   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x200000fc   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20000110   Data          20  tasks.o(.bss)
    .bss                                     0x20000124   Section    17408  heap_2.o(.bss)
    ucHeap                                   0x20000124   Data       17408  heap_2.o(.bss)
    .bss                                     0x20004524   Section       96  libspace.o(.bss)
    HEAP                                     0x20004588   Section      512  startup_mdr32f9qx.o(HEAP)
    Heap_Mem                                 0x20004588   Data         512  startup_mdr32f9qx.o(HEAP)
    STACK                                    0x20004788   Section     1024  startup_mdr32f9qx.o(STACK)
    Stack_Mem                                0x20004788   Data        1024  startup_mdr32f9qx.o(STACK)
    __initial_sp                             0x20004b88   Data           0  startup_mdr32f9qx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_mdr32f9qx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_mdr32f9qx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_mdr32f9qx.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d7   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080000fd   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000119   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000135   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000139   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800013d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800013d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800013d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800014f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000151   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000151   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000155   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x0800015d   Thumb Code    32  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x08000181   Thumb Code    28  port.o(.emb_text)
    PendSV_Handler                           0x080001a1   Thumb Code    72  port.o(.emb_text)
    vPortGetIPSR                             0x080001ed   Thumb Code     6  port.o(.emb_text)
    Reset_Handler                            0x080001f5   Thumb Code     8  startup_mdr32f9qx.o(.text)
    NMI_Handler                              0x080001fd   Thumb Code     2  startup_mdr32f9qx.o(.text)
    HardFault_Handler                        0x080001ff   Thumb Code     2  startup_mdr32f9qx.o(.text)
    MemManage_Handler                        0x08000201   Thumb Code     2  startup_mdr32f9qx.o(.text)
    BusFault_Handler                         0x08000203   Thumb Code     2  startup_mdr32f9qx.o(.text)
    UsageFault_Handler                       0x08000205   Thumb Code     2  startup_mdr32f9qx.o(.text)
    DebugMon_Handler                         0x08000209   Thumb Code     2  startup_mdr32f9qx.o(.text)
    ADC_IRQHandler                           0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    BACKUP_IRQHandler                        0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    CAN1_IRQHandler                          0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    CAN2_IRQHandler                          0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    COMPARATOR_IRQHandler                    0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    DMA_IRQHandler                           0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT1_IRQHandler                      0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT2_IRQHandler                      0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT3_IRQHandler                      0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT4_IRQHandler                      0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    I2C_IRQHandler                           0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    POWER_IRQHandler                         0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    SSP1_IRQHandler                          0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    SSP2_IRQHandler                          0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer1_IRQHandler                        0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer2_IRQHandler                        0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer3_IRQHandler                        0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    UART1_IRQHandler                         0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    UART2_IRQHandler                         0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    USB_IRQHandler                           0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    WWDG_IRQHandler                          0x0800020f   Thumb Code     0  startup_mdr32f9qx.o(.text)
    __user_initial_stackheap                 0x08000211   Thumb Code     0  startup_mdr32f9qx.o(.text)
    __use_two_region_memory                  0x08000235   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000237   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000239   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0800023b   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000285   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000299   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000299   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000299   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080002a1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080002ad   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080002ad   Thumb Code     2  use_no_semi.o(.text)
    Clock_Init                               0x080002af   Thumb Code    60  main.o(i.Clock_Init)
    __semihosting_library_function           0x080002af   Thumb Code     0  indicate_semi.o(.text)
    PORT_Init                                0x080002ed   Thumb Code   450  mdr32f9qx_port.o(i.PORT_Init)
    PORT_ResetBits                           0x080004b5   Thumb Code    22  mdr32f9qx_port.o(i.PORT_ResetBits)
    PORT_SetBits                             0x080004d1   Thumb Code    22  mdr32f9qx_port.o(i.PORT_SetBits)
    Port_Init                                0x080004ed   Thumb Code    50  main.o(i.Port_Init)
    RST_CLK_CPU_PLLcmd                       0x08000525   Thumb Code     6  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLcmd)
    RST_CLK_CPU_PLLconfig                    0x08000531   Thumb Code    54  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLconfig)
    RST_CLK_CPU_PLLuse                       0x08000571   Thumb Code     6  mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLuse)
    RST_CLK_CPUclkPrescaler                  0x0800057d   Thumb Code    18  mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkPrescaler)
    RST_CLK_CPUclkSelection                  0x08000595   Thumb Code    16  mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkSelection)
    RST_CLK_GetFlagStatus                    0x080005a9   Thumb Code    42  mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus)
    RST_CLK_HSEconfig                        0x080005dd   Thumb Code    56  mdr32f9qx_rst_clk.o(i.RST_CLK_HSEconfig)
    RST_CLK_HSEstatus                        0x08000619   Thumb Code    52  mdr32f9qx_rst_clk.o(i.RST_CLK_HSEstatus)
    RST_CLK_PCLKcmd                          0x0800064d   Thumb Code    26  mdr32f9qx_rst_clk.o(i.RST_CLK_PCLKcmd)
    SysTick_Handler                          0x0800066d   Thumb Code    46  port.o(i.SysTick_Handler)
    SystemCoreClockUpdate                    0x080006a1   Thumb Code   130  system_mdr32f9qx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08000731   Thumb Code    54  system_mdr32f9qx.o(i.SystemInit)
    main                                     0x08000771   Thumb Code    58  main.o(i.main)
    pvPortMalloc                             0x08000af9   Thumb Code   166  heap_2.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x08000bb1   Thumb Code    30  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x08000bd5   Thumb Code    40  list.o(i.uxListRemove)
    vLed1                                    0x08000bfd   Thumb Code    32  main.o(i.vLed1)
    vLed2                                    0x08000c21   Thumb Code    32  main.o(i.vLed2)
    vListInitialise                          0x08000c45   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x08000c5f   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x08000c65   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x08000c99   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x08000cb1   Thumb Code    30  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x08000cd5   Thumb Code    28  port.o(i.vPortExitCritical)
    vPortFree                                0x08000cf5   Thumb Code    56  heap_2.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x08000d35   Thumb Code    20  port.o(i.vPortSetupTimerInterrupt)
    vTaskDelay                               0x08000d4d   Thumb Code    46  tasks.o(i.vTaskDelay)
    vTaskStartScheduler                      0x08000d81   Thumb Code    72  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x08000de5   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x08000df5   Thumb Code    76  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x08000e55   Thumb Code    42  port.o(i.xPortStartScheduler)
    xTaskCreate                              0x08000e89   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskIncrementTick                       0x08000ee9   Thumb Code   238  tasks.o(i.xTaskIncrementTick)
    xTaskResumeAll                           0x08001005   Thumb Code   196  tasks.o(i.xTaskResumeAll)
    Region$$Table$$Base                      0x080010ec   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800110c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_mdr32f9qx.o(.data)
    pxCurrentTCB                             0x20000008   Data           4  tasks.o(.data)
    __libspace_start                         0x20004524   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20004584   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001168, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000110c, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_mdr32f9qx.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         1133  * !!!main             c_w.l(__main.o)
    0x080000c8   0x080000c8   0x00000034   Code   RO         1292    !!!scatter          c_w.l(__scatter.o)
    0x080000fc   0x080000fc   0x0000001a   Code   RO         1294    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000116   0x08000116   0x00000002   PAD
    0x08000118   0x08000118   0x0000001c   Code   RO         1296    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000134   0x08000134   0x00000002   Code   RO         1162    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1169    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1171    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1174    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1176    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1178    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1181    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1183    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1185    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1187    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1189    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1191    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1193    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1195    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1197    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1199    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1201    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1205    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1207    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1209    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000000   Code   RO         1211    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000136   0x08000136   0x00000002   Code   RO         1212    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000138   0x08000138   0x00000002   Code   RO         1232    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1245    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1247    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1250    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1253    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1255    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1258    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800013a   0x0800013a   0x00000002   Code   RO         1259    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800013c   0x0800013c   0x00000000   Code   RO         1135    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800013c   0x0800013c   0x00000000   Code   RO         1139    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800013c   0x0800013c   0x00000006   Code   RO         1151    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1141    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000142   0x08000142   0x00000004   Code   RO         1142    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000146   0x08000146   0x00000000   Code   RO         1144    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000146   0x08000146   0x00000008   Code   RO         1145    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000002   Code   RO         1166    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000150   0x08000150   0x00000000   Code   RO         1214    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000150   0x08000150   0x00000004   Code   RO         1215    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000154   0x08000154   0x00000006   Code   RO         1216    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800015a   0x0800015a   0x00000002   PAD
    0x0800015c   0x0800015c   0x00000096   Code   RO          308    .emb_text           port.o
    0x080001f2   0x080001f2   0x00000002   PAD
    0x080001f4   0x080001f4   0x00000040   Code   RO            4    .text               startup_mdr32f9qx.o
    0x08000234   0x08000234   0x00000006   Code   RO         1131    .text               c_w.l(heapauxi.o)
    0x0800023a   0x0800023a   0x0000004a   Code   RO         1153    .text               c_w.l(sys_stackheap_outer.o)
    0x08000284   0x08000284   0x00000012   Code   RO         1155    .text               c_w.l(exit.o)
    0x08000296   0x08000296   0x00000002   PAD
    0x08000298   0x08000298   0x00000008   Code   RO         1163    .text               c_w.l(libspace.o)
    0x080002a0   0x080002a0   0x0000000c   Code   RO         1224    .text               c_w.l(sys_exit.o)
    0x080002ac   0x080002ac   0x00000002   Code   RO         1235    .text               c_w.l(use_no_semi.o)
    0x080002ae   0x080002ae   0x00000000   Code   RO         1237    .text               c_w.l(indicate_semi.o)
    0x080002ae   0x080002ae   0x0000003c   Code   RO           70    i.Clock_Init        main.o
    0x080002ea   0x080002ea   0x00000002   PAD
    0x080002ec   0x080002ec   0x000001c8   Code   RO         1062    i.PORT_Init         mdr32f9qx_port.o
    0x080004b4   0x080004b4   0x0000001c   Code   RO         1065    i.PORT_ResetBits    mdr32f9qx_port.o
    0x080004d0   0x080004d0   0x0000001c   Code   RO         1066    i.PORT_SetBits      mdr32f9qx_port.o
    0x080004ec   0x080004ec   0x00000038   Code   RO           71    i.Port_Init         main.o
    0x08000524   0x08000524   0x0000000c   Code   RO          846    i.RST_CLK_CPU_PLLcmd  mdr32f9qx_rst_clk.o
    0x08000530   0x08000530   0x00000040   Code   RO          847    i.RST_CLK_CPU_PLLconfig  mdr32f9qx_rst_clk.o
    0x08000570   0x08000570   0x0000000c   Code   RO          849    i.RST_CLK_CPU_PLLuse  mdr32f9qx_rst_clk.o
    0x0800057c   0x0800057c   0x00000018   Code   RO          850    i.RST_CLK_CPUclkPrescaler  mdr32f9qx_rst_clk.o
    0x08000594   0x08000594   0x00000014   Code   RO          851    i.RST_CLK_CPUclkSelection  mdr32f9qx_rst_clk.o
    0x080005a8   0x080005a8   0x00000034   Code   RO          854    i.RST_CLK_GetFlagStatus  mdr32f9qx_rst_clk.o
    0x080005dc   0x080005dc   0x0000003c   Code   RO          856    i.RST_CLK_HSEconfig  mdr32f9qx_rst_clk.o
    0x08000618   0x08000618   0x00000034   Code   RO          857    i.RST_CLK_HSEstatus  mdr32f9qx_rst_clk.o
    0x0800064c   0x0800064c   0x00000020   Code   RO          867    i.RST_CLK_PCLKcmd   mdr32f9qx_rst_clk.o
    0x0800066c   0x0800066c   0x00000034   Code   RO          309    i.SysTick_Handler   port.o
    0x080006a0   0x080006a0   0x00000090   Code   RO           12    i.SystemCoreClockUpdate  system_mdr32f9qx.o
    0x08000730   0x08000730   0x00000040   Code   RO           13    i.SystemInit        system_mdr32f9qx.o
    0x08000770   0x08000770   0x0000004c   Code   RO           72    i.main              main.o
    0x080007bc   0x080007bc   0x00000098   Code   RO          524    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000854   0x08000854   0x000000b4   Code   RO          525    i.prvAddNewTaskToReadyList  tasks.o
    0x08000908   0x08000908   0x00000048   Code   RO          526    i.prvCheckTasksWaitingTermination  tasks.o
    0x08000950   0x08000950   0x00000012   Code   RO          527    i.prvDeleteTCB      tasks.o
    0x08000962   0x08000962   0x00000002   PAD
    0x08000964   0x08000964   0x00000038   Code   RO          803    i.prvHeapInit       heap_2.o
    0x0800099c   0x0800099c   0x00000028   Code   RO          528    i.prvIdleTask       tasks.o
    0x080009c4   0x080009c4   0x00000080   Code   RO          529    i.prvInitialiseNewTask  tasks.o
    0x08000a44   0x08000a44   0x00000068   Code   RO          530    i.prvInitialiseTaskLists  tasks.o
    0x08000aac   0x08000aac   0x00000034   Code   RO          531    i.prvResetNextTaskUnblockTime  tasks.o
    0x08000ae0   0x08000ae0   0x00000016   Code   RO          310    i.prvTaskExitError  port.o
    0x08000af6   0x08000af6   0x00000002   PAD
    0x08000af8   0x08000af8   0x000000b8   Code   RO          804    i.pvPortMalloc      heap_2.o
    0x08000bb0   0x08000bb0   0x00000024   Code   RO          311    i.pxPortInitialiseStack  port.o
    0x08000bd4   0x08000bd4   0x00000028   Code   RO          269    i.uxListRemove      list.o
    0x08000bfc   0x08000bfc   0x00000024   Code   RO           74    i.vLed1             main.o
    0x08000c20   0x08000c20   0x00000024   Code   RO           75    i.vLed2             main.o
    0x08000c44   0x08000c44   0x0000001a   Code   RO          270    i.vListInitialise   list.o
    0x08000c5e   0x08000c5e   0x00000006   Code   RO          271    i.vListInitialiseItem  list.o
    0x08000c64   0x08000c64   0x00000034   Code   RO          272    i.vListInsert       list.o
    0x08000c98   0x08000c98   0x00000018   Code   RO          273    i.vListInsertEnd    list.o
    0x08000cb0   0x08000cb0   0x00000024   Code   RO          313    i.vPortEnterCritical  port.o
    0x08000cd4   0x08000cd4   0x00000020   Code   RO          314    i.vPortExitCritical  port.o
    0x08000cf4   0x08000cf4   0x00000040   Code   RO          805    i.vPortFree         heap_2.o
    0x08000d34   0x08000d34   0x00000018   Code   RO          315    i.vPortSetupTimerInterrupt  port.o
    0x08000d4c   0x08000d4c   0x00000034   Code   RO          538    i.vTaskDelay        tasks.o
    0x08000d80   0x08000d80   0x00000064   Code   RO          551    i.vTaskStartScheduler  tasks.o
    0x08000de4   0x08000de4   0x00000010   Code   RO          553    i.vTaskSuspendAll   tasks.o
    0x08000df4   0x08000df4   0x00000060   Code   RO          554    i.vTaskSwitchContext  tasks.o
    0x08000e54   0x08000e54   0x00000034   Code   RO          316    i.xPortStartScheduler  port.o
    0x08000e88   0x08000e88   0x00000060   Code   RO          556    i.xTaskCreate       tasks.o
    0x08000ee8   0x08000ee8   0x0000011c   Code   RO          561    i.xTaskIncrementTick  tasks.o
    0x08001004   0x08001004   0x000000e8   Code   RO          565    i.xTaskResumeAll    tasks.o
    0x080010ec   0x080010ec   0x00000020   Data   RO         1290    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0800110c, Size: 0x00004b88, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0800110c   0x00000004   Data   RW           14    .data               system_mdr32f9qx.o
    0x20000004   0x08001110   0x00000004   Data   RW          317    .data               port.o
    0x20000008   0x08001114   0x0000003c   Data   RW          568    .data               tasks.o
    0x20000044   0x08001150   0x00000018   Data   RW          809    .data               heap_2.o
    0x2000005c        -       0x000000c8   Zero   RW          567    .bss                tasks.o
    0x20000124        -       0x00004400   Zero   RW          808    .bss                heap_2.o
    0x20004524        -       0x00000060   Zero   RW         1164    .bss                c_w.l(libspace.o)
    0x20004584   0x08001168   0x00000004   PAD
    0x20004588        -       0x00000200   Zero   RW            2    HEAP                startup_mdr32f9qx.o
    0x20004788        -       0x00000400   Zero   RW            1    STACK               startup_mdr32f9qx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0       1476   event_groups.o
       304         40          0         24      17408       3247   heap_2.o
       148          0          0          0          0       2874   list.o
       264         32          0          0          0      70648   main.o
       512         18          0          0          0       2536   mdr32f9qx_port.o
       328         52          0          0          0       7952   mdr32f9qx_rst_clk.o
       404         48          0          4          0       8348   port.o
        64         26        192          0       1536        880   startup_mdr32f9qx.o
       208         24          0          4          0       5979   system_mdr32f9qx.o
      1622        262          0         60        200      20541   tasks.o

    ----------------------------------------------------------------------
      3862        502        224         92      19144     124481   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       278         16          0          0        100        584   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       272         16          0          0         96        584   c_w.l

    ----------------------------------------------------------------------
       278         16          0          0        100        584   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4140        518        224         92      19244     122461   Grand Totals
      4140        518        224         92      19244     122461   ELF Image Totals
      4140        518        224         92          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4364 (   4.26kB)
    Total RW  Size (RW Data + ZI Data)             19336 (  18.88kB)
    Total ROM Size (Code + RO Data + RW Data)       4456 (   4.35kB)

==============================================================================

